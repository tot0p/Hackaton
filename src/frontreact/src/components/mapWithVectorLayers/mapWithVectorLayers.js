import React from "react";
import 'leaflet/dist/leaflet.css'
import { MapContainer, TileLayer, Polygon } from "react-leaflet";

const MapWithVectorLayers = () => {
  // Les données GeoJSON avec les latitudes et longitudes inversées
  const geoJsonData = {
    type: "FeatureCollection",
    features: [
      {
        type: "Feature",
        properties: {},
        geometry: {
          type: "Polygon",
          coordinates: [
            [
              [
                2.2937920217692196,
                48.886013926216854
              ],
              [
                2.293845314785917,
                48.88602594895494
              ],
              [
                2.293840438854043,
                48.8860357526043
              ],
              [
                2.2938434576861426,
                48.88603789553243
              ],
              [
                2.293846768284863,
                48.88603984232805
              ],
              [
                2.2938503408948647,
                48.886041574828944
              ],
              [
                2.293854145712015,
                48.88604307847002
              ],
              [
                2.2938581488412946,
                48.88604433866196
              ],
              [
                2.2938623136118426,
                48.886045344396564
              ],
              [
                2.2938666033039117,
                48.88604608826254
              ],
              [
                2.2938709812098352,
                48.88604656194943
              ],
              [
                2.2938754064705025,
                48.88604676161885
              ],
              [
                2.2938798395533295,
                48.88604668613845
              ],
              [
                2.2938842436411964,
                48.886046335290956
              ],
              [
                2.293898244523475,
                48.886049578115546
              ],
              [
                2.2939046370398604,
                48.88605364212756
              ],
              [
                2.293908235719719,
                48.8860553630891
              ],
              [
                2.2939120611520343,
                48.88605685515855
              ],
              [
                2.2939160807810977,
                48.88605810555319
              ],
              [
                2.293920260651086,
                48.88605910418013
              ],
              [
                2.293924562702791,
                48.886059841821556
              ],
              [
                2.293928948840922,
                48.886060311957486
              ],
              [
                2.293933383672436,
                48.88606050988258
              ],
              [
                2.29393782628943,
                48.88606043535555
              ],
              [
                2.293942239862376,
                48.886060089058546
              ],
              [
                2.293948126165509,
                48.88605049551199
              ],
              [
                2.294556510254583,
                48.886194237176475
              ],
              [
                2.294575959973714,
                48.88618917251227
              ],
              [
                2.2946047430668806,
                48.886145442061974
              ],
              [
                2.294598685134122,
                48.88613258008842
              ],
              [
                2.2938898582509197,
                48.88587716520218
              ],
              [
                2.293850979237985,
                48.88586306819408
              ],
              [
                2.2932906109187967,
                48.88566188708048
              ],
              [
                2.293193298149479,
                48.8857330524687
              ],
              [
                2.293192790891051,
                48.8857327481976
              ],
              [
                2.2931891340303965,
                48.88573541741505
              ],
              [
                2.2931911509381893,
                48.88573662363598
              ],
              [
                2.2931624023614647,
                48.88575754688246
              ],
              [
                2.2931603840777033,
                48.8857563415523
              ],
              [
                2.2931567272014215,
                48.885759011667986
              ],
              [
                2.2931572290665616,
                48.88575931141076
              ],
              [
                2.293074856469306,
                48.88581914156813
              ],
              [
                2.2930831630205732,
                48.88584695032795
              ],
              [
                2.293750603687555,
                48.88600413549707
              ],
              [
                2.2937920217692196,
                48.886013926216854
              ]
            ],
          ],
        },
      },
      {
        type: "Feature",
        properties: {},
        geometry: {
          type: "Polygon",
          coordinates: [
            [
            ],
          ],
        },
      },
    ],
  };

  return (
    <MapContainer center={[48.858461, 2.342656]} zoom={11} style={{ height: "500px", width: "100%" }}>
      <TileLayer
        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      />
      {geoJsonData.features.map((feature, index) => (
        <Polygon
          key={index}
          positions={feature.geometry.coordinates[0].map((coords) => [coords[1], coords[0]])}
          pathOptions={{
            color: "blue",
            fillColor: "green",
            fillOpacity: 0.6,
          }}
        />
      ))}
    </MapContainer>
  );
};

export default MapWithVectorLayers;
